% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/correction.R
\name{correct_rel_bias}
\alias{correct_rel_bias}
\title{Correcting Systematic Bias in Metabolomic Timecourse Data}
\usage{
correct_rel_bias(time, concentration, metabolite, f_smooth = met_smooth_gam,
  max.iter = 20, min.deviation = 0.02, ...)
}
\arguments{
\item{time}{A vector of times or sample numbers for metabolite time-courses.
Note, there should be a time value for every \code{concentration}
for every \code{metabolite} e.g. time = c(1, 2, 3, 1, 2, 3),
concentration = c(20, 15, 10, 3, 6, 9),
metabolite = c('glc', 'glc', 'glc', 'lac', 'lac', 'lac').}

\item{concentration}{A vector of metabolite concentrations.}

\item{metabolite}{A vector of metabolite names that correspond to \code{time}
and \code{concentration}.}

\item{f_smooth}{Smoothing function (set to met_smooth_gam by default).}

\item{max.iter}{The algorithm correct the single most deviating point at one
time (as it may influence the identification of other
deviations). \code{max.iter} controls the maximum number
of correction passes.}

\item{min.deviation}{Smallest median relative deviation to identify as a
bias. 0.02 has been found to be a good default for
a diverse set of metabolic time-courses from
higher eukaryote cell culture.}

\item{...}{Arguments to be passed into \code{f_smooth}, (such as k or
span parameters for met_smooth_gam and met_smooth_loess
respectively).}
}
\value{
A vector of corrected concentrations.
}
\description{
Identifies systematic deviations in metabolic data using a smoothing fit.
Timepoints that have a median relative deviation above a threshold value
are assumed to be influenced by a measurement or methodological bias as
compared to the overall trends metabolite concentrations.
}
\examples{
set.seed(1111)

# Setting parameters to generate 40 metabolic trends with 10 time points
param <- list(
  # Maximum concentrations are the same for every trend type
  p.max = 0.3,
  par1.max = c(7, 2),
  par2.max = c(0.5, 2),
  con.max = c(0, 50),

  # Global change parameters are near 100\% for increasing/concave trends
  par1.change = c(5, 0.1),
  con.change = c(0.5, 1),

  # Decreasing trends can have a wide variety of changes
  p.change.decreasing = 0.7,
  par1.change.decreasing = c(2, 5),
  par2.change.decreasing = c(0.5, 0.5),
  con.change.decreasing = c(0.1, 1),

  # Linear trends are characterized by relatively small changes
  par1.change.linear = c(1, 5),
  con.change.linear = c(0, 0.1),

  # Measurement error is the same for every trend type (but no more than 20\%)
  p.sd = 0.7,
  par1.sd = c(0.04, 0.02),
  par2.sd = c(0.11, 0.02),
  con.sd = c(0, 0.20),

  # Decreasing trend specification
  p.trend.decreasing = 0.05,
  par1.trend.decreasing = c(0.2, 0.6, 0.10, 0.18),
  par2.trend.decreasing = c(0.6, 0.9, 0.10, 0.18),

  # Increasing trend specification
  p.trend.increasing = 0.15,
  par1.trend.increasing = c(0.045, 0.055, 0.2, 0.4),
  par2.trend.increasing = c(0.945, 0.955, 0.1, 0.3),

  # Concave trend specification
  par1.trend.concave = c(3.5, 4.5, 2.5, 3.5, 0.0, 0.2, 0.8, 0.9),

  # Linear trends are equaly split between increasing and decreasing
  p.trend.linear = 0.5
)

# Generating trends
timecourse <- simulate_timecourse(40, c(0.4, 0.2, 0.2), param)

# Adding times
timecourse$time <- (timecourse$sample - 1)*24

# Adding an error of 10\% at sample 4
logic <- timecourse$sample == 4
timecourse$concentration[logic] <- timecourse$concentration[logic] * 1.05

# Correcting
timecourse$corrected <- correct_rel_bias(timecourse$time,
                                         timecourse$concentration,
                                         timecourse$metabolite)


# Plotting -- the original value of the corrected point is marked in red
par(mfrow = c(8, 5), oma = c(5, 4, 1, 1) + 0.1, mar = c(1, 1, 1, 1) + 0.1)
new.time <- seq(min(timecourse$time), max(timecourse$time), length.out=100)

for (metabolite in unique(timecourse$metabolite)) {

  logic <- timecourse$metabolite == metabolite
  d <- timecourse[logic, ]

  logic2 <- d$concentration != d$corrected

  plot(d$time, d$corrected, pch = 16, xlab = '', ylab = '',
       ylim = c(min(d$concentration), max(d$concentration)))

  smoothed <- met_smooth_gam(d$time, d$corrected,
                             new.time = new.time, k = 5)
  lines(new.time, smoothed)

  points(d$time[logic2], d$concentration[logic2], pch = 16, col = 'red')

}

title(xlab = 'Time post inoculation (hours)',
      ylab = 'Concentration (mM)', outer = TRUE, line = 3)
}

